// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "TechTrain MISSION ゲームAPI入門仕様\n まずはこのAPI仕様に沿って機能を実装してみましょう。\n \n この画面の各APIの「Try it out」-\u003e「Execute」を利用することで\n ローカル環境で起動中のAPIにAPIリクエストをすることができます。",
    "title": "TechTrain MISSION Game API",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "paths": {
    "/character/list": {
      "get": {
        "description": "ユーザが所持しているキャラクター一覧情報を取得します。",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "character"
        ],
        "summary": "ユーザ所持キャラクター一覧取得API",
        "parameters": [
          {
            "type": "string",
            "description": "認証トークン",
            "name": "x-token",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CharacterListResponse"
            }
          }
        }
      }
    },
    "/gacha/draw": {
      "post": {
        "description": "ガチャを引いてキャラクターを取得する処理を実装します。\n 獲得したキャラクターはユーザ所持キャラクターテーブルへ保存します。\n 同じ種類のキャラクターでもユーザは複数所持することができます。\n \n キャラクターの確率は等倍ではなく、任意に変更できるようテーブルを設計しましょう。",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "gacha"
        ],
        "summary": "ガチャ実行API",
        "parameters": [
          {
            "type": "string",
            "description": "認証トークン",
            "name": "x-token",
            "in": "header",
            "required": true
          },
          {
            "description": "Request Body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GachaDrawRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GachaDrawResponse"
            }
          }
        }
      }
    },
    "/user/create": {
      "post": {
        "description": "ユーザ情報を作成します。\n ユーザの名前情報をリクエストで受け取り、ユーザIDと認証用のトークンを生成しデータベースへ保存します。",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "ユーザ情報作成API",
        "parameters": [
          {
            "description": "Request Body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UserCreateResponse"
            }
          }
        }
      }
    },
    "/user/get": {
      "get": {
        "description": "ユーザ情報を取得します。\n ユーザの認証と特定の処理はリクエストヘッダのx-tokenを読み取ってデータベースに照会をします。",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "ユーザ情報取得API",
        "parameters": [
          {
            "type": "string",
            "description": "認証トークン",
            "name": "x-token",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UserGetResponse"
            }
          }
        }
      }
    },
    "/user/update": {
      "put": {
        "description": "ユーザ情報の更新をします。\n 初期実装では名前の更新を行います。",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "ユーザ情報更新API",
        "parameters": [
          {
            "type": "string",
            "description": "認証トークン",
            "name": "x-token",
            "in": "header",
            "required": true
          },
          {
            "description": "Request Body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          }
        }
      }
    }
  },
  "definitions": {
    "CharacterListResponse": {
      "type": "object",
      "properties": {
        "characters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserCharacter"
          }
        }
      }
    },
    "GachaDrawRequest": {
      "type": "object",
      "properties": {
        "times": {
          "description": "実行回数",
          "type": "integer"
        }
      }
    },
    "GachaDrawResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GachaResult"
          }
        }
      }
    },
    "GachaResult": {
      "type": "object",
      "properties": {
        "characterID": {
          "description": "キャラクターID",
          "type": "string"
        },
        "name": {
          "description": "キャラクター名",
          "type": "string"
        }
      }
    },
    "UserCharacter": {
      "type": "object",
      "properties": {
        "characterID": {
          "description": "キャラクターID",
          "type": "string"
        },
        "name": {
          "description": "キャラクター名",
          "type": "string"
        },
        "userCharacterID": {
          "description": "ユニークID",
          "type": "string"
        }
      }
    },
    "UserCreateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "description": "ユーザ名",
          "type": "string"
        }
      }
    },
    "UserCreateResponse": {
      "type": "object",
      "properties": {
        "token": {
          "description": "クライアント側で保存するトークン",
          "type": "string"
        }
      }
    },
    "UserGetResponse": {
      "type": "object",
      "properties": {
        "name": {
          "description": "ユーザ名",
          "type": "string"
        }
      }
    },
    "UserUpdateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "description": "ユーザ名",
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "description": "ユーザ関連API",
      "name": "user"
    },
    {
      "description": "ガチャ関連API",
      "name": "gacha"
    },
    {
      "description": "キャラクター関連API",
      "name": "character"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "TechTrain MISSION ゲームAPI入門仕様\n まずはこのAPI仕様に沿って機能を実装してみましょう。\n \n この画面の各APIの「Try it out」-\u003e「Execute」を利用することで\n ローカル環境で起動中のAPIにAPIリクエストをすることができます。",
    "title": "TechTrain MISSION Game API",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "paths": {
    "/character/list": {
      "get": {
        "description": "ユーザが所持しているキャラクター一覧情報を取得します。",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "character"
        ],
        "summary": "ユーザ所持キャラクター一覧取得API",
        "parameters": [
          {
            "type": "string",
            "description": "認証トークン",
            "name": "x-token",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CharacterListResponse"
            }
          }
        }
      }
    },
    "/gacha/draw": {
      "post": {
        "description": "ガチャを引いてキャラクターを取得する処理を実装します。\n 獲得したキャラクターはユーザ所持キャラクターテーブルへ保存します。\n 同じ種類のキャラクターでもユーザは複数所持することができます。\n \n キャラクターの確率は等倍ではなく、任意に変更できるようテーブルを設計しましょう。",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "gacha"
        ],
        "summary": "ガチャ実行API",
        "parameters": [
          {
            "type": "string",
            "description": "認証トークン",
            "name": "x-token",
            "in": "header",
            "required": true
          },
          {
            "description": "Request Body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GachaDrawRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GachaDrawResponse"
            }
          }
        }
      }
    },
    "/user/create": {
      "post": {
        "description": "ユーザ情報を作成します。\n ユーザの名前情報をリクエストで受け取り、ユーザIDと認証用のトークンを生成しデータベースへ保存します。",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "ユーザ情報作成API",
        "parameters": [
          {
            "description": "Request Body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UserCreateResponse"
            }
          }
        }
      }
    },
    "/user/get": {
      "get": {
        "description": "ユーザ情報を取得します。\n ユーザの認証と特定の処理はリクエストヘッダのx-tokenを読み取ってデータベースに照会をします。",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "ユーザ情報取得API",
        "parameters": [
          {
            "type": "string",
            "description": "認証トークン",
            "name": "x-token",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UserGetResponse"
            }
          }
        }
      }
    },
    "/user/update": {
      "put": {
        "description": "ユーザ情報の更新をします。\n 初期実装では名前の更新を行います。",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "ユーザ情報更新API",
        "parameters": [
          {
            "type": "string",
            "description": "認証トークン",
            "name": "x-token",
            "in": "header",
            "required": true
          },
          {
            "description": "Request Body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          }
        }
      }
    }
  },
  "definitions": {
    "CharacterListResponse": {
      "type": "object",
      "properties": {
        "characters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserCharacter"
          }
        }
      }
    },
    "GachaDrawRequest": {
      "type": "object",
      "properties": {
        "times": {
          "description": "実行回数",
          "type": "integer"
        }
      }
    },
    "GachaDrawResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GachaResult"
          }
        }
      }
    },
    "GachaResult": {
      "type": "object",
      "properties": {
        "characterID": {
          "description": "キャラクターID",
          "type": "string"
        },
        "name": {
          "description": "キャラクター名",
          "type": "string"
        }
      }
    },
    "UserCharacter": {
      "type": "object",
      "properties": {
        "characterID": {
          "description": "キャラクターID",
          "type": "string"
        },
        "name": {
          "description": "キャラクター名",
          "type": "string"
        },
        "userCharacterID": {
          "description": "ユニークID",
          "type": "string"
        }
      }
    },
    "UserCreateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "description": "ユーザ名",
          "type": "string"
        }
      }
    },
    "UserCreateResponse": {
      "type": "object",
      "properties": {
        "token": {
          "description": "クライアント側で保存するトークン",
          "type": "string"
        }
      }
    },
    "UserGetResponse": {
      "type": "object",
      "properties": {
        "name": {
          "description": "ユーザ名",
          "type": "string"
        }
      }
    },
    "UserUpdateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "description": "ユーザ名",
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "description": "ユーザ関連API",
      "name": "user"
    },
    {
      "description": "ガチャ関連API",
      "name": "gacha"
    },
    {
      "description": "キャラクター関連API",
      "name": "character"
    }
  ]
}`))
}
