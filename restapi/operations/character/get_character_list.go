// Code generated by go-swagger; DO NOT EDIT.

package character

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetCharacterListHandlerFunc turns a function with the right signature into a get character list handler
type GetCharacterListHandlerFunc func(GetCharacterListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetCharacterListHandlerFunc) Handle(params GetCharacterListParams) middleware.Responder {
	return fn(params)
}

// GetCharacterListHandler interface for that can handle valid get character list params
type GetCharacterListHandler interface {
	Handle(GetCharacterListParams) middleware.Responder
}

// NewGetCharacterList creates a new http.Handler for the get character list operation
func NewGetCharacterList(ctx *middleware.Context, handler GetCharacterListHandler) *GetCharacterList {
	return &GetCharacterList{Context: ctx, Handler: handler}
}

/* GetCharacterList swagger:route GET /character/list character getCharacterList

ユーザ所持キャラクター一覧取得API

ユーザが所持しているキャラクター一覧情報を取得します。

*/
type GetCharacterList struct {
	Context *middleware.Context
	Handler GetCharacterListHandler
}

func (o *GetCharacterList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetCharacterListParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
